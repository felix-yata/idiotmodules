# ---------------------------------------------------------------------------------
# Name: promote
# Description: Promote/demote users
# Author: hikkikomoa
# Commands:
# .promote | .demote | .fullrights
# ---------------------------------------------------------------------------------

# -*- coding: utf-8 -*-

# meta developer: @hikkikomoa

import io
import time

from telethon.errors import (
    ChatAdminRequiredError,
    UserAdminInvalidError,
)
from telethon.tl.functions.channels import (
    EditAdminRequest,
    EditBannedRequest,
)
from telethon.tl.functions.messages import EditChatAdminRequest
from telethon.tl.types import ChatAdminRights, ChatBannedRights

from .. import loader, utils

# ================== CONSTANS ========================

DEMOTE_RIGHTS = ChatAdminRights(
    post_messages=None,
    add_admins=None,
    invite_users=None,
    change_info=None,
    ban_users=None,
    delete_messages=None,
    pin_messages=None,
    edit_messages=None,
)

# =====================================================


@loader.tds
class PromoteMod(loader.Module):
    """Promote/demote users"""

    strings = {
        "name": "Promote",
        "promote_none": "<b>ü´§ No one to promote.</b>",
        "who": "<b>‚ùì Who is it?</b>",
        "this_isn`t_a_chat": "<b>üßê This isn`t a chat!</b>",
        "no_rights": "<b>ü´§ I don`t have rights.</b>",
        "no_args": "<b>ü´§ Invalid arguments specified.</b>",
        "not_admin": "<b>ü§¨ I`m not an admin here.</b>",
        "promoted": "<b>ü´£ {} promoted to admin rights.\n‚úçÔ∏è Rank: {}</b>",
        "promotedfull": "<b>ü´£ {} promoted to admin with full rights.\n‚úçÔ∏è Rank: {}</b>",
        "demote_none": "<b>ü§¨No one to demote.</b>",
        "demoted": "<b>üòÇ {} demoted to admin rights. üëé</b>",
    }

    strings_ru = {
        "name": "Promote",
        "promote_none": "<b>ü´§ –£–∫–∞–∂–∏—Ç–µ –∫–æ–≥–æ –ø–æ–≤—ã—à–∞—Ç—å.</b>",
        "who": "<b>‚ùì –≠—Ç–æ –∫—Ç–æ?</b>",
        "this_isn`t_a_chat": "<b>üßê –≠—Ç–æ –Ω–µ —á–∞—Ç!</b>",
        "no_rights": "<b>ü´§ –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –ø–æ—Ç–æ–º—É —á—Ç–æ —è –§–ï–ú–ò–ù–ò–°–¢–ö–ê!</b>",
        "no_args": "<b>ü´§ –£–∫–∞–∑–∞–Ω—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã</b>",
        "not_admin": "<b>ü§¨ –Ø –Ω–µ –∞–¥–º–∏–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ.</b>",
        "promoted": "<b>ü´£ {} –ø–æ–≤—ã—à–µ–Ω –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n‚úçÔ∏è –î–æ–ª–∂–Ω–æ—Å—Ç—å: {}</b>",
        "promotedfull": "<b>ü´£ {} –ø–æ–≤—ã—à–µ–Ω –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø–æ–ª–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏.\n‚úçÔ∏è –î–æ–ª–∂–Ω–æ—Å—Ç—å: {}</b>",
        "demote_none": "<b>ü§¨–£–∫–∞–∂–∏—Ç–µ –∫–æ–≥–æ –ø–æ–Ω–∏–∂–∞—Ç—å.</b>",
        "demoted": "<b>üòÇ –° {} —Å–Ω—è—Ç—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. üëé</b>",
        "_cmd_doc_promote": "–ö–æ–º–∞–Ω–¥–∞ .promote –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: .promote <@ –∏–ª–∏ –æ—Ç–≤–µ—Ç> <–¥–æ–ª–∂–Ω–æ—Å—Ç—å>.",
        "_cmd_doc_demote": "–ö–æ–º–∞–Ω–¥–∞ .demote –¥–ª—è –ø–æ–Ω–∏–∂–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .demote <@ –∏–ª–∏ –æ—Ç–≤–µ—Ç>",
        "_cmd_doc_fullrights": "–ö–æ–º–∞–Ω–¥–∞ .fullrights –¥–ª—è –≤—ã–¥–∞—á–∏ –ø–æ–ª–Ω—ã–π –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .fullrights <@ –∏–ª–∏ –æ—Ç–≤–µ—Ç> <–¥–æ–ª–Ω–∂–æ—Å—Ç—å>."
    }

    strings_ua = {
        "name": "Promote",
        "promote_none": "<b>ü´§ –í–∫–∞–∂—ñ—Ç—å –∫–æ–≥–æ –øi–¥–≤–∏—â—É–≤–∞—Ç–∏.</b>",
        "who": "<b>‚ùì –¶–µ —Ö—Ç–æ?</b>",
        "this_isn`t_a_chat": "<b>üßê –¶–µ –Ω–µ —á–∞—Ç!</b>",
        "no_rights": "<b>ü´§ –Ø –Ω–µ –º–∞—é –ø—Ä–∞–≤, —Ç–æ–º—É —â–æ —è –§–ï–ú–Ü–ù–Ü–°–¢–ö–ê!</b>",
        "no_args": "<b>ü´§ –£–∫–∞–∑–∞–Ω—ñ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏. </b>",
        "not_admin": "<b>ü§¨ –Ø –Ω–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —É —Ü—å–æ–º—É —á–∞—Ç—ñ.</b>",
        "promoted": "<b>ü´£ {} –ü—ñ–¥–≤–∏—â–µ–Ω–æ –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n‚úçÔ∏è –ü–æ—Å–∞–¥–∞: {}</b>",
        "promotedfull": "<b>ü´£ {} –ü—ñ–¥–≤–∏—â–µ–Ω–∏–π –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∑ –ø–æ–≤–Ω–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏.\n‚úçÔ∏è –ü–æ—Å–∞–¥–∞: {}</b>",
        "demote_none": "<b>ü§¨–£—Ç–æ—á–Ω—ñ—Ç—å, –∫–æ–≥–æ –∫–æ–≥–æ –∑–Ω–∏–∂—É–≤–∞—Ç–∏ –≤ –ø–æ—Å–∞–¥—ñ.</b>",
        "demoted": "<b>üòÇ –ó {} –ó–Ω—è—Ç–∏–π –∑ –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞. üëé</b>",
        "_cmd_doc_promote": "–ö–æ–º–∞–Ω–¥–∞ .promote –¥–ª—è –øi–¥–≤–∏—â–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏: .promote <@ –∞–±–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å> <–ø–æ—Å–∞–¥–∞>.",
        "_cmd_doc_demote": "–ö–æ–º–∞–Ω–¥–∞ .demote  —â–æ–± –∑–Ω–∏–∑–∏—Ç–∏ —Ä—ñ–≤–µ–Ω—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.\n –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ .demote <@ –∞–±–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å>",
        "_cmd_doc_fullrights": "–ö–æ–º–∞–Ω–¥–∞ .fullrights –¥–ª—è –Ω–∞–¥–∞–Ω–Ω—è –ø–æ–≤–Ω–∏—Ö –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏: .fullrights <@ –∞–±–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å > <–ø–æ—Å–∞–¥–∞>."
    }


    async def promotecmd(self, message):
        """Command .promote for promote user to admin rights.\nUse: .promote <@ or reply> <rank>."""
        if not message.chat:
            return await utils.answer(
                message, self.strings("this_isn`t_a_chat", message)
            )
        try:
            args = utils.get_args_raw(message).split(" ")
            reply = await message.get_reply_message()
            rank = "Admin"

            chat = await message.get_chat()
            adm_rights = chat.admin_rights
            if not adm_rights and not chat.creator:
                return await utils.answer(message, self.strings("not_admin", message))

            if reply:
                args = utils.get_args_raw(message)
                rank = args or rank
                user = await message.client.get_entity(reply.sender_id)
            else:
                user = await message.client.get_entity(
                    args[0] if not args[0].isnumeric() else int(args[0])
                )
                if len(args) == 1:
                    rank = rank
                elif len(args) >= 2:
                    rank = utils.get_args_raw(message).split(" ", 1)[1]
            try:
                await message.client(
                    EditAdminRequest(
                        message.chat_id,
                        user.id,
                        ChatAdminRights(
                            change_info=False,
                            post_messages=False,
                            edit_messages=False,
                            delete_messages=False,
                            ban_users=False,
                            invite_users=True,
                            pin_messages=False,
                            add_admins=False,
                            anonymous=False,
                            manage_call=False,
                            other=False
                        ),
                        rank,
                    )
                )
            except ChatAdminRequiredError:
                return await utils.answer(message, self.strings("no_rights", message))
            else:
                return await utils.answer(
                    message,
                    self.strings("promoted", message).format(user.first_name, rank),
                )
        except ValueError:
            return await utils.answer(message, self.strings("no_args", message))

    async def demotecmd(self, message):
        """Command .demote for demote user to admin rights.\nUse: .demote <@ or reply>."""
        if message.is_private:
            return await utils.answer(
                message, self.strings("this_isn`t_a_chat", message)
            )
        try:
            reply = await message.get_reply_message()

            chat = await message.get_chat()
            if not chat.admin_rights and not chat.creator:
                return await utils.answer(message, self.strings("not_admin", message))

            if reply:
                user = await message.client.get_entity(reply.sender_id)
            else:
                args = utils.get_args_raw(message)
                if not args:
                    return await utils.answer(
                        message, self.strings("demote_none", message)
                    )
                user = await message.client.get_entity(
                    args if not args.isnumeric() else int(args)
                )

            try:
                if message.is_channel:
                    await message.client(
                        EditAdminRequest(message.chat_id, user.id, DEMOTE_RIGHTS, "")
                    )
                else:
                    await message.client(
                        EditChatAdminRequest(message.chat_id, user.id, False)
                    )
            except ChatAdminRequiredError:
                return await utils.answer(message, self.strings("no_rights", message))
            else:
                return await utils.answer(
                    message, self.strings("demoted", message).format(user.first_name)
                )
        except ValueError:
            return await utils.answer(message, self.strings("no_args"))

    async def fullrightscmd(self, message):
        """Command .fullrights use it to grant full rights.\nUse: .promote <@ or reply> <rank>."""
        if not message.chat:
            return await utils.answer(
                message, self.strings("this_isn`t_a_chat", message)
            )
        try:
            args = utils.get_args_raw(message).split(" ")
            reply = await message.get_reply_message()
            rank = "Admin"

            chat = await message.get_chat()
            adm_rights = chat.admin_rights
            if not adm_rights and not chat.creator:
                return await utils.answer(message, self.strings("not_admin", message))

            if reply:
                args = utils.get_args_raw(message)
                rank = args or rank
                user = await message.client.get_entity(reply.sender_id)
            else:
                user = await message.client.get_entity(
                    args[0] if not args[0].isnumeric() else int(args[0])
                )
                if len(args) == 1:
                    rank = rank
                elif len(args) >= 2:
                    rank = utils.get_args_raw(message).split(" ", 1)[1]
            try:
                await message.client(
                    EditAdminRequest(
                        message.chat_id,
                        user.id,
                        ChatAdminRights(
                            change_info=True,
                            post_messages=True,
                            edit_messages=True,
                            delete_messages=True,
                            ban_users=True,
                            invite_users=True,
                            pin_messages=True,
                            add_admins=True,
                            anonymous=False,
                            manage_call=True,
                            other=False
                        ),
                        rank,
                    )
                )
            except ChatAdminRequiredError:
                return await utils.answer(message, self.strings("no_rights", message))
            else:
                return await utils.answer(
                    message,
                    self.strings("promotedfull", message).format(user.first_name, rank),
                )
        except ValueError:
            return await utils.answer(message, self.strings("no_args", message))

   
